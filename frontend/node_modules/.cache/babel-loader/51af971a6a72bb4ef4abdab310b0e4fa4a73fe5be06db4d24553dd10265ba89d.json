{"ast":null,"code":"var _jsxFileName = \"/home/nils/Documents/Ancient civ card game /frontend/src/pages/game/Arena.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Navbar from \"../../components/Navbar\";\nimport StatsPanel from \"./StatsPanel\";\nimport CardComponent from \"../../components/CardComponent\";\nimport { loadAllCards } from \"./data/cards\";\nimport \"../../styles/game.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Arena = () => {\n  _s();\n  const [playerHand, setPlayerHand] = useState([]);\n  const [botHand, setBotHand] = useState([]);\n  const [round, setRound] = useState(1);\n  const [message, setMessage] = useState(\"\");\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [botSelectedCard, setBotSelectedCard] = useState(null);\n  const [score, setScore] = useState({\n    player: 0,\n    bot: 0\n  });\n\n  // Charger les cartes au lancement\n  useEffect(() => {\n    const setupGame = async () => {\n      const allCards = await loadAllCards();\n      const shuffled = allCards.sort(() => 0.5 - Math.random());\n      setPlayerHand(shuffled.slice(0, 5));\n      setBotHand(shuffled.slice(5, 10));\n    };\n    setupGame();\n  }, []);\n  const compareCards = (card1, card2) => {\n    const total1 = card1.stats.influence + card1.stats.conscience;\n    const total2 = card2.stats.influence + card2.stats.conscience;\n    if (total1 > total2) return \"player\";\n    if (total2 > total1) return \"bot\";\n    return \"draw\";\n  };\n  const handleCardSelect = (card, index) => {\n    const botIndex = Math.floor(Math.random() * botHand.length);\n    const botCard = botHand[botIndex];\n    setSelectedCard(card);\n    setBotSelectedCard(botCard);\n    const winner = compareCards(card, botCard);\n    if (winner === \"player\") {\n      setMessage(\"✅ Tu gagnes ce tour !\");\n      setScore(prev => ({\n        ...prev,\n        player: prev.player + 1\n      }));\n    } else if (winner === \"bot\") {\n      setMessage(\"🤖 Le robot gagne ce tour !\");\n      setScore(prev => ({\n        ...prev,\n        bot: prev.bot + 1\n      }));\n    } else {\n      setMessage(\"⚖️ Égalité !\");\n    }\n    setPlayerHand(prev => prev.filter((_, i) => i !== index));\n    setBotHand(prev => prev.filter((_, i) => i !== botIndex));\n    setRound(r => r + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u2694\\uFE0F Ar\\xE8ne de Combat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Tour \", round, \" / 5\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scoreboard\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uD83E\\uDDD9\\u200D\\u2642\\uFE0F Toi : \", score.player]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uD83E\\uDD16 Bot : \", score.bot]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), selectedCard && botSelectedCard && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"arena-battle\",\n        children: [/*#__PURE__*/_jsxDEV(CardComponent, {\n          card: selectedCard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: \"2em\",\n            margin: \"0 20px\"\n          },\n          children: \"VS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardComponent, {\n          card: botSelectedCard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83C\\uDCCF Ta main\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-row\",\n        children: playerHand.map((card, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleCardSelect(card, i),\n          children: /*#__PURE__*/_jsxDEV(CardComponent, {\n            card: card\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Arena, \"bUY0N5blZSLOXVRQId0FMXMvrpU=\");\n_c = Arena;\nexport default Arena;\nvar _c;\n$RefreshReg$(_c, \"Arena\");","map":{"version":3,"names":["React","useEffect","useState","Navbar","StatsPanel","CardComponent","loadAllCards","jsxDEV","_jsxDEV","Arena","_s","playerHand","setPlayerHand","botHand","setBotHand","round","setRound","message","setMessage","selectedCard","setSelectedCard","botSelectedCard","setBotSelectedCard","score","setScore","player","bot","setupGame","allCards","shuffled","sort","Math","random","slice","compareCards","card1","card2","total1","stats","influence","conscience","total2","handleCardSelect","card","index","botIndex","floor","length","botCard","winner","prev","filter","_","i","r","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","fontSize","margin","map","onClick","_c","$RefreshReg$"],"sources":["/home/nils/Documents/Ancient civ card game /frontend/src/pages/game/Arena.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Navbar from \"../../components/Navbar\";\nimport StatsPanel from \"./StatsPanel\";\nimport CardComponent from \"../../components/CardComponent\";\nimport { loadAllCards } from \"./data/cards\";\nimport \"../../styles/game.css\";\n\nconst Arena = () => {\n  const [playerHand, setPlayerHand] = useState([]);\n  const [botHand, setBotHand] = useState([]);\n  const [round, setRound] = useState(1);\n  const [message, setMessage] = useState(\"\");\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [botSelectedCard, setBotSelectedCard] = useState(null);\n  const [score, setScore] = useState({ player: 0, bot: 0 });\n\n  // Charger les cartes au lancement\n  useEffect(() => {\n    const setupGame = async () => {\n      const allCards = await loadAllCards();\n      const shuffled = allCards.sort(() => 0.5 - Math.random());\n      setPlayerHand(shuffled.slice(0, 5));\n      setBotHand(shuffled.slice(5, 10));\n    };\n    setupGame();\n  }, []);\n\n  const compareCards = (card1, card2) => {\n    const total1 = card1.stats.influence + card1.stats.conscience;\n    const total2 = card2.stats.influence + card2.stats.conscience;\n\n    if (total1 > total2) return \"player\";\n    if (total2 > total1) return \"bot\";\n    return \"draw\";\n  };\n\n  const handleCardSelect = (card, index) => {\n    const botIndex = Math.floor(Math.random() * botHand.length);\n    const botCard = botHand[botIndex];\n\n    setSelectedCard(card);\n    setBotSelectedCard(botCard);\n\n    const winner = compareCards(card, botCard);\n\n    if (winner === \"player\") {\n      setMessage(\"✅ Tu gagnes ce tour !\");\n      setScore((prev) => ({ ...prev, player: prev.player + 1 }));\n    } else if (winner === \"bot\") {\n      setMessage(\"🤖 Le robot gagne ce tour !\");\n      setScore((prev) => ({ ...prev, bot: prev.bot + 1 }));\n    } else {\n      setMessage(\"⚖️ Égalité !\");\n    }\n\n    setPlayerHand((prev) => prev.filter((_, i) => i !== index));\n    setBotHand((prev) => prev.filter((_, i) => i !== botIndex));\n\n    setRound((r) => r + 1);\n  };\n\n  return (\n    <div className=\"game-container\">\n      <Navbar />\n\n      <div className=\"game-page\">\n        <h1>⚔️ Arène de Combat</h1>\n        <p>Tour {round} / 5</p>\n        <p>{message}</p>\n\n        <div className=\"scoreboard\">\n          <p>🧙‍♂️ Toi : {score.player}</p>\n          <p>🤖 Bot : {score.bot}</p>\n        </div>\n\n        {selectedCard && botSelectedCard && (\n          <div className=\"arena-battle\">\n            <CardComponent card={selectedCard} />\n            <span style={{ fontSize: \"2em\", margin: \"0 20px\" }}>VS</span>\n            <CardComponent card={botSelectedCard} />\n          </div>\n        )}\n\n        <h2>🃏 Ta main</h2>\n        <div className=\"card-row\">\n          {playerHand.map((card, i) => (\n            <div key={i} onClick={() => handleCardSelect(card, i)}>\n              <CardComponent card={card} />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Arena;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}