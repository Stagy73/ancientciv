{"ast":null,"code":"var _jsxFileName = \"/home/nils/Documents/Ancient civ card game /frontend/src/pages/game/CardHand.jsx\";\nimport React from \"react\";\nimport Card from \"./CardComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst groupCardsByCategory = (cards, niveau) => {\n  const categories = {\n    Personnages: [],\n    Artefacts: [],\n    Pouvoirs: [],\n    Événements: []\n  };\n  cards.forEach(card => {\n    const origine = card.stats.origine.toLowerCase();\n\n    // ❌ Bloquer cartes atlantes si niveau trop faible\n    if (origine === \"atlante\" && niveau < 10) return;\n    if (origine.includes(\"anunnaki\") || origine.includes(\"reptilien\") || origine.includes(\"hybride\") || origine.includes(\"atlante\")) {\n      categories.Personnages.push(card);\n    } else if (origine === \"artefact\" || origine === \"lieu\") {\n      categories.Artefacts.push(card);\n    } else if (origine === \"pouvoir\") {\n      categories.Pouvoirs.push(card);\n    } else if (origine === \"evenement\" || origine === \"événement\") {\n      categories.Événements.push(card);\n    }\n  });\n  return categories;\n};\nconst CardHand = ({\n  cards,\n  animating,\n  niveau,\n  filtre\n}) => {\n  const grouped = groupCardsByCategory(cards, niveau);\n  const filteredGrouped = filtre === \"Toutes\" ? grouped : {\n    [filtre]: grouped[filtre]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `card-hand ${animating ? \"animating\" : \"\"}`,\n    children: Object.entries(filteredGrouped).map(([category, cards]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-category\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-row\",\n        children: cards.length > 0 ? cards.map((card, index) => /*#__PURE__*/_jsxDEV(Card, {\n          card: card\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 42\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"empty-category\",\n          children: \"Aucune carte\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, category, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_c = CardHand;\nexport default CardHand;\nvar _c;\n$RefreshReg$(_c, \"CardHand\");","map":{"version":3,"names":["React","Card","jsxDEV","_jsxDEV","groupCardsByCategory","cards","niveau","categories","Personnages","Artefacts","Pouvoirs","Événements","forEach","card","origine","stats","toLowerCase","includes","push","CardHand","animating","filtre","grouped","filteredGrouped","className","children","Object","entries","map","category","fileName","_jsxFileName","lineNumber","columnNumber","length","index","_c","$RefreshReg$"],"sources":["/home/nils/Documents/Ancient civ card game /frontend/src/pages/game/CardHand.jsx"],"sourcesContent":["import React from \"react\";\nimport Card from \"./CardComponent\";\n\nconst groupCardsByCategory = (cards, niveau) => {\n  const categories = {\n    Personnages: [],\n    Artefacts: [],\n    Pouvoirs: [],\n    Événements: [],\n  };\n\n  cards.forEach((card) => {\n    const origine = card.stats.origine.toLowerCase();\n\n    // ❌ Bloquer cartes atlantes si niveau trop faible\n    if (origine === \"atlante\" && niveau < 10) return;\n\n    if (\n      origine.includes(\"anunnaki\") ||\n      origine.includes(\"reptilien\") ||\n      origine.includes(\"hybride\") ||\n      origine.includes(\"atlante\")\n    ) {\n      categories.Personnages.push(card);\n    } else if (origine === \"artefact\" || origine === \"lieu\") {\n      categories.Artefacts.push(card);\n    } else if (origine === \"pouvoir\") {\n      categories.Pouvoirs.push(card);\n    } else if (origine === \"evenement\" || origine === \"événement\") {\n      categories.Événements.push(card);\n    }\n  });\n\n  return categories;\n};\n\nconst CardHand = ({ cards, animating, niveau, filtre }) => {\n  const grouped = groupCardsByCategory(cards, niveau);\n\n  const filteredGrouped =\n    filtre === \"Toutes\" ? grouped : { [filtre]: grouped[filtre] };\n\n  return (\n    <div className={`card-hand ${animating ? \"animating\" : \"\"}`}>\n      {Object.entries(filteredGrouped).map(([category, cards]) => (\n        <div key={category} className=\"card-category\">\n          <h2>{category}</h2>\n          <div className=\"card-row\">\n            {cards.length > 0 ? (\n              cards.map((card, index) => <Card key={index} card={card} />)\n            ) : (\n              <p className=\"empty-category\">Aucune carte</p>\n            )}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default CardHand;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}